From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MrHua269 <novau233@163.com>
Date: Wed, 7 Feb 2024 06:03:02 +0000
Subject: [PATCH] Gale Don't load chunks to activate climbing entities


diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 3fce42fd3450296f155e068bc377d57ae3f98ba4..3df427b1bc4d0f477a14c5d063dda09cb5a9edc2 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -5599,6 +5599,16 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
         return this.inBlockState;
     }
 
+    // Gale start - don't load chunks to activate climbing entities
+    public @Nullable BlockState getFeetBlockStateIfLoaded() {
+        if (this.inBlockState == null) {
+            this.inBlockState = this.level.getBlockStateIfLoaded(this.blockPosition());
+        }
+
+        return this.inBlockState;
+    }
+    // Gale end - don't load chunks to activate climbing entities
+
     public ChunkPos chunkPosition() {
         return this.chunkPosition;
     }
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index 75a0bc9abf87bac8bea92250ad0c6ec77d87c6cd..f854aa6791c8e3babf00be462d47d1d8ad4bfcef 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -2073,19 +2073,43 @@ public abstract class LivingEntity extends Entity implements Attackable {
 
     public boolean onClimableCached() {
         if (!this.blockPosition().equals(this.lastClimbingPosition)) {
-            this.cachedOnClimable = this.onClimbable();
-            this.lastClimbingPosition = this.blockPosition();
+            // Gale start - don't load chunks to activate climbing entities
+            Boolean onClimbableIfLoaded = this.onClimbable(org.leavesmc.lumina.config.LuminaConfig.configModule.optimization.allowLoadChunksToActiveClimbingEntities);
+            if (onClimbableIfLoaded != null) {
+                this.cachedOnClimable = onClimbableIfLoaded;
+                this.lastClimbingPosition = this.blockPosition();
+            } else {
+                this.cachedOnClimable = false;
+                this.lastClimbingPosition = null;
+            }
+            // Gale end - don't load chunks to activate climbing entities
         }
         return this.cachedOnClimable;
     }
     // Pufferfish end
 
     public boolean onClimbable() {
+        // Gale start - don't load chunks to activate climbing entities
+        return onClimbable(true);
+    }
+
+    public Boolean onClimbable(boolean loadChunk) {
+        // Gale end - don't load chunks to activate climbing entities
         if (this.isSpectator()) {
             return false;
         } else {
             BlockPos blockposition = this.blockPosition();
-            BlockState iblockdata = this.getInBlockState();
+            // Gale start - don't load chunks to activate climbing entities
+            BlockState iblockdata;
+            if (loadChunk) {
+                iblockdata = this.getInBlockState();
+            } else {
+                iblockdata = this.getFeetBlockStateIfLoaded();
+                if (iblockdata == null) {
+                    return null;
+                }
+            }
+            // Gale end - don't load chunks to activate climbing entities
 
             if (iblockdata.is(BlockTags.CLIMBABLE)) {
                 this.lastClimbablePos = Optional.of(blockposition);
