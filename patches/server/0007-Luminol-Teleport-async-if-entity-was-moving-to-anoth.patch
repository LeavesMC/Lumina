From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MrHua269 <novau233@163.com>
Date: Wed, 7 Feb 2024 06:34:15 +0000
Subject: [PATCH] Luminol Teleport async if entity was moving to another region
 at once


diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index fad6a7185e8e9ea160b47ec9da56d08af9df8396..bfc6c269d96201e8001b6575d4cb59cd70d1d7bc 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -1127,6 +1127,10 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
     }
     // Paper end - detailed watchdog information
 
+    //Luminol start - Fix large pos moving
+    private volatile boolean preventMoving = false;
+    //Luminol end
+
     public void move(MoverType movementType, Vec3 movement) {
         final Vec3 originalMovement = movement; // Paper - Expose pre-collision velocity
         // Paper start - detailed watchdog information
@@ -1137,6 +1141,32 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
             this.moveStartZ = this.getZ();
             this.moveVector = movement;
         }
+        //Luminol start - Fix high position moving
+        if (org.leavesmc.lumina.config.LuminaConfig.configModule.fix.fixEntityMoving.enabled && io.papermc.paper.util.TickThread.isTickThread()){ //Except the threads because it may be called by the chunk system worker thread
+            var finalPosition = movement.add(this.position);
+            if (this.preventMoving || Double.isNaN(finalPosition.x) || Double.isNaN(finalPosition.y) || Double.isNaN(finalPosition.z)){
+                return;
+            }
+
+            if (!io.papermc.paper.util.TickThread.isTickThreadFor(((ServerLevel) this.level),finalPosition)){
+                this.preventMoving = true;
+                this.teleportAsync(
+                        (ServerLevel) this.level(),
+                        finalPosition,
+                        this.getYRot(), this.getXRot(),
+                        null, PlayerTeleportEvent.TeleportCause.UNKNOWN,
+                        Entity.TELEPORT_FLAG_LOAD_CHUNK | Entity.TELEPORT_FLAG_TELEPORT_PASSENGERS,
+                        result -> {
+                            this.preventMoving = false;
+                        }
+                );
+                if (org.leavesmc.lumina.config.LuminaConfig.configModule.fix.fixEntityMoving.warnOnDetected){
+                    MinecraftServer.LOGGER.warn("Entity {} with entityId {} has tried moving to another region!",this.type.getCategory().getName(),this.getId());
+                }
+                return;
+            }
+        }
+        //Luminol end
         try {
         // Paper end - detailed watchdog information
         if (this.noPhysics) {
