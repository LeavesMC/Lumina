From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MrHua269 <novau233@163.com>
Date: Mon, 10 Jun 2024 10:51:08 +0000
Subject: [PATCH] Luminol Try fixing folia off region POI accessing issue


diff --git a/src/main/java/net/minecraft/world/entity/ai/behavior/GoToPotentialJobSite.java b/src/main/java/net/minecraft/world/entity/ai/behavior/GoToPotentialJobSite.java
index aac1df9e2c0652bc6348af0404deba7465f82d42..f93c9a1b15ca973f5e200c4c806256c5c9a9b11a 100644
--- a/src/main/java/net/minecraft/world/entity/ai/behavior/GoToPotentialJobSite.java
+++ b/src/main/java/net/minecraft/world/entity/ai/behavior/GoToPotentialJobSite.java
@@ -49,10 +49,17 @@ public class GoToPotentialJobSite extends Behavior<Villager> {
             ServerLevel serverLevel2 = serverLevel.getServer().getLevel(pos.dimension());
             if (serverLevel2 != null) {
                 PoiManager poiManager = serverLevel2.getPoiManager();
+                // Luminol start - Fix off region POI accessing
+                java.lang.Runnable scheduledRelease = () -> {
                 if (poiManager.exists(blockPos, poiType -> true)) {
                     poiManager.release(blockPos);
                 }
-
+                };
+                if (!io.papermc.paper.util.TickThread.isTickThreadFor(serverLevel2, blockPos) && org.leavesmc.lumina.config.LuminaConfig.configModule.fix.fixFoliaPoiAccessOffRegion)
+                    io.papermc.paper.threadedregions.RegionizedServer.getInstance().taskQueue.queueTickTaskQueue(serverLevel2, blockPos.getX() >> 4, blockPos.getZ() >> 4, scheduledRelease);
+                else
+                    scheduledRelease.run();
+                // Luminol end
                 DebugPackets.sendPoiTicketCountPacket(serverLevel, blockPos);
             }
         });
diff --git a/src/main/java/net/minecraft/world/entity/ai/behavior/YieldJobSite.java b/src/main/java/net/minecraft/world/entity/ai/behavior/YieldJobSite.java
index d1a9b62d3304916275dd6b4c4e783cf1563b5e21..b6b68097a7fa01bec30c308af8b18c3cd128d5e9 100644
--- a/src/main/java/net/minecraft/world/entity/ai/behavior/YieldJobSite.java
+++ b/src/main/java/net/minecraft/world/entity/ai/behavior/YieldJobSite.java
@@ -6,6 +6,7 @@ import net.minecraft.core.BlockPos;
 import net.minecraft.core.GlobalPos;
 import net.minecraft.core.Holder;
 import net.minecraft.network.protocol.game.DebugPackets;
+import net.minecraft.server.level.ServerLevel;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.PathfinderMob;
 import net.minecraft.world.entity.ai.behavior.declarative.BehaviorBuilder;
@@ -33,7 +34,10 @@ public class YieldJobSite {
                                 } else if (entity.getVillagerData().getProfession() != VillagerProfession.NONE) {
                                     return false;
                                 } else {
-                                    BlockPos blockPos = context.<GlobalPos>get(potentialJobSite).pos();
+                                    final GlobalPos globalPos = context.<GlobalPos>get(potentialJobSite); // Luminol start - Try fixing off main POI accessing
+                                    final ServerLevel targetLevel = net.minecraft.server.MinecraftServer.getServer().getLevel(globalPos.dimension()); //Luminol - Try fixing off main POI accessing
+                                    BlockPos blockPos = globalPos.pos(); // Luminol end - Try fixing off main POI accessing
+                                    if (!io.papermc.paper.util.TickThread.isTickThreadFor(targetLevel, blockPos) && org.leavesmc.lumina.config.LuminaConfig.configModule.fix.fixFoliaPoiAccessOffRegion) return true; // Luminol - Try fixing off main POI accessing
                                     Optional<Holder<PoiType>> optional = world.getPoiManager().getType(blockPos);
                                     if (optional.isEmpty()) {
                                         return true;
diff --git a/src/main/java/net/minecraft/world/entity/ai/village/poi/PoiManager.java b/src/main/java/net/minecraft/world/entity/ai/village/poi/PoiManager.java
index cf69b4ed4a40015a23d053230c3f326a700788ef..16e2e3edc62f9774518b8e783f8eb1ca35d413c8 100644
--- a/src/main/java/net/minecraft/world/entity/ai/village/poi/PoiManager.java
+++ b/src/main/java/net/minecraft/world/entity/ai/village/poi/PoiManager.java
@@ -96,7 +96,7 @@ public class PoiManager extends SectionStorage<PoiSection> {
 
     public Stream<PoiRecord> getInSquare(Predicate<Holder<PoiType>> typePredicate, BlockPos pos, int radius, PoiManager.Occupancy occupationStatus) {
         int i = Math.floorDiv(radius, 16) + 1;
-        return ChunkPos.rangeClosed(new ChunkPos(pos), i).flatMap(chunkPos -> this.getInChunk(typePredicate, chunkPos, occupationStatus)).filter(poi -> {
+        return ChunkPos.rangeClosed(new ChunkPos(pos), i).filter(cpos -> org.leavesmc.lumina.config.LuminaConfig.configModule.fix.fixFoliaPoiAccessOffRegion ? io.papermc.paper.util.TickThread.isTickThreadFor(this.world,cpos) : true).flatMap(chunkPos -> this.getInChunk(typePredicate, chunkPos, occupationStatus)).filter(poi -> { // Luminol - Fix off region POI access
             BlockPos blockPos2 = poi.getPos();
             return Math.abs(blockPos2.getX() - pos.getX()) <= radius && Math.abs(blockPos2.getZ() - pos.getZ()) <= radius;
         });
